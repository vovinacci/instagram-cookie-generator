SHELL := /usr/bin/env bash
.DEFAULT_GOAL = help

# Unify target echoing
PRINT_TARGET = @echo "[make] --> $@"

export PYTHONPATH ?= src

.PHONY: clean
clean:  ## Cleanup autogenerated code
	$(PRINT_TARGET)
	-rm -rf .mypy_cache/ build/ venv/
	find . -type d -name '__pycache__' -print0 | xargs -0 -n 1 -t -x rm -fr
	find . -type d -name '*.egg-info' -print0 | xargs -0 -n 1 -t -x rm -fr

.PHONY: code-checks
code-checks:  ## Meta target that runs all code checks
	$(PRINT_TARGET)
	isort .
	black .
	pylint .
	mypy --install-types --check-untyped-defs .

.PHONY: code-fmt-check
code-fmt-check:  ## Check code formatting
	$(PRINT_TARGET)
	isort --check-only .
	black --check .

.PHONY: container-build-push
container-build-push:
	docker build --build-arg VERSION=$(VERSION) -t ghcr.io/$(OWNER)/instagram-cookie-generator:$(VERSION) -t ghcr.io/$(OWNER)/instagram-cookie-generator:latest .
	echo "$(GHCR_PAT)" | docker login ghcr.io -u $(OWNER) --password-stdin
	#docker push ghcr.io/$(OWNER)/instagram-cookie-generator:$(VERSION)
	docker push ghcr.io/$(OWNER)/instagram-cookie-generator:latest


.PHONY: container-test
container-test:  ## Run tests in container
	$(PRINT_TARGET)
	docker compose -f docker-compose.test.yaml up --build --abort-on-container-exit

.PHONY: help
help:  ## Display this help.
	@grep -h -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) \
		| sort \
		| awk 'BEGIN {FS = ":.*?## "}; {printf "\033[0;32m%-30s\033[0m %s\n", $$1, $$2}'

.PHONY: hooks-install
hooks-install:  ## Install pre-commit hooks
	$(PRINT_TARGET)
	pre-commit install

.PHONY: lint
lint: clean  ## Run linters
	$(PRINT_TARGET)
	mypy --install-types --check-untyped-defs .
	pylint .

.PHONY: test
test:  ## Run tests
	$(PRINT_TARGET)
	pytest
